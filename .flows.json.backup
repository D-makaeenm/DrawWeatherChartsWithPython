[
    {
        "id": "6c7d92ecb4d70fba",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a9e607d3e6ecf26",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "SQLServer",
        "server": "DUYVPRO",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "thaycop",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "abb046ec7755ec4f",
        "type": "inject",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "8d567fc254ee24e3"
            ]
        ]
    },
    {
        "id": "8d567fc254ee24e3",
        "type": "http request",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8000/weather",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 360,
        "wires": [
            [
                "8d157b265e4afecf"
            ]
        ]
    },
    {
        "id": "c6dcfa1611101514",
        "type": "http in",
        "z": "6c7d92ecb4d70fba",
        "name": "/get-temp",
        "url": "/get-temp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "3f08c7f438f31a80"
            ]
        ]
    },
    {
        "id": "9ed7bec2111dbe54",
        "type": "http response",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 780,
        "y": 580,
        "wires": []
    },
    {
        "id": "9d1e625588cd6980",
        "type": "MSSQL",
        "z": "6c7d92ecb4d70fba",
        "mssqlCN": "0a9e607d3e6ecf26",
        "name": "get temp",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "select Date, Temperature from thoi_tiet",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 460,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "8d157b265e4afecf",
        "type": "json",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "4e55a88bb225cbce",
                "3546ebb43af4e108"
            ]
        ]
    },
    {
        "id": "dba8d27b4745981b",
        "type": "http in",
        "z": "6c7d92ecb4d70fba",
        "name": "/get-press",
        "url": "/get-press",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "8db7e96500e0f9b7"
            ]
        ]
    },
    {
        "id": "11c6af2703a008f5",
        "type": "http in",
        "z": "6c7d92ecb4d70fba",
        "name": "/get-humi",
        "url": "/get-humi",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "6b9f8e55cb97c159"
            ]
        ]
    },
    {
        "id": "8db7e96500e0f9b7",
        "type": "MSSQL",
        "z": "6c7d92ecb4d70fba",
        "mssqlCN": "0a9e607d3e6ecf26",
        "name": "get press",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "select Date, Pressure from thoi_tiet",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 460,
        "y": 820,
        "wires": [
            [
                "e30a65eb95d43173"
            ]
        ]
    },
    {
        "id": "6b9f8e55cb97c159",
        "type": "MSSQL",
        "z": "6c7d92ecb4d70fba",
        "mssqlCN": "0a9e607d3e6ecf26",
        "name": "get humi",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "select Date, Humidity from thoi_tiet",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 460,
        "y": 760,
        "wires": [
            [
                "d81d24d48978c3d1"
            ]
        ]
    },
    {
        "id": "e30a65eb95d43173",
        "type": "http response",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 820,
        "wires": []
    },
    {
        "id": "d81d24d48978c3d1",
        "type": "http response",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 760,
        "wires": []
    },
    {
        "id": "4e55a88bb225cbce",
        "type": "function",
        "z": "6c7d92ecb4d70fba",
        "name": "function 1",
        "func": "// Parse JSON thành mảng các đối tượng\nvar data = JSON.parse(msg.payload);\n\n// Tạo một chuỗi để chứa các câu lệnh SQL INSERT\nvar sqlQuery = \"\";\n\n// Lặp qua từng đối tượng trong mảng và tạo câu lệnh INSERT tương ứng\nfor (var i = 0; i < data.length; i++) {\n    var obj = data[i];\n    sqlQuery += \"INSERT INTO thoi_tiet (City, Temperature, Humidity, Pressure, Date) VALUES ('\" + obj.City + \"', \" + obj.Temperature + \", \" + obj.Humidity + \", \" + obj.Pressure + \", '\" + obj.Date + \"');\\n\";\n}\n\n// Gửi câu lệnh SQL đã tạo tới output\nmsg.payload = sqlQuery;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 460,
        "wires": [
            [
                "41df2e4fe3b4971f"
            ]
        ]
    },
    {
        "id": "41df2e4fe3b4971f",
        "type": "MSSQL",
        "z": "6c7d92ecb4d70fba",
        "mssqlCN": "0a9e607d3e6ecf26",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 840,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3546ebb43af4e108",
        "type": "debug",
        "z": "6c7d92ecb4d70fba",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "3f08c7f438f31a80",
        "type": "http request",
        "z": "6c7d92ecb4d70fba",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/thaycop/getdata.php",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 580,
        "wires": [
            [
                "a8d95d1f7484d26b"
            ]
        ]
    },
    {
        "id": "a8d95d1f7484d26b",
        "type": "function",
        "z": "6c7d92ecb4d70fba",
        "name": "function 2",
        "func": "// Chuyển đổi chuỗi JSON thành đối tượng JavaScript\nvar data = JSON.parse(msg.payload);\n\n// Lọc ra chỉ dữ liệu về nhiệt độ (Temperature) và ngày (Date)\nvar filteredData = data.map(function(item) {\n    return {\n        Temperature: item.Temperature,\n        Date: item.Date.date\n    };\n});\n\n// Gửi dữ liệu đã lọc tới đầu ra\nmsg.payload = filteredData;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 580,
        "wires": [
            [
                "9ed7bec2111dbe54"
            ]
        ]
    }
]